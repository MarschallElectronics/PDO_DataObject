{
 "name" : "config",
 "parent" : "",
 "title" : "",
 "path" : "/home/alan/gitlive/PDO_DataObject/docs/config.bjs",
 "permname" : "",
 "modOrder" : "001",
 "strings" : {
  "c73e1063642e4b100f0d27e1bf13213a" : "<p>\nPDO_DataObject can be configured in many ways, the exact properties are listed\n in the <a href=\"#pdo-dataobject/config\">config</a> method\n</p>\n\n<p>\nDatabase DSNs are based around the classic PEAR DB, format (URL), and are mapped to PDO DSN for connecting.\nA DSN consists of\n<dl>\n\n<dt>database type://</dt>\n<dd>currently supported are mysql, pgsql, sqlite and to some degree oracle and mssql</dd>\n\n\n\n<dt>user:pass@</dt>\n<dd>before the host, you can put the user and password combination,<br/>\n for postgresql the user pass will be set as the arguments on the PDO constructor\n</dd>\n\n<dt>hostname/</dt>\n<dd>normally  localhost, or an IP or server. if you are using sqlite the format is slightly different, see below.\n</dd>\n\n<dt>databasename</dt>\n<dd>the database name.</dd>\n\n<dt>?some=params</dt>\n<dd>if the PDO connections needs other information it can go here.\n</dd>\n\n<dt>#ATTR_PERSISENT</dt>\n<dd>you can set PDO connection properties using the pipe character as a seperator after the hash, eg.\nXXXX=1|YYY=2\n</dd>\n\n</dl>",
  "6ed348e04674567827e341bb5b6d9d82" : "Example of using PDO_DataObjects",
  "254f642527b45bc260048e30704edb39" : "Configuration",
  "d6aa8be6ff38aa217305484e5dd38a88" : "<p>\nWhat that code does should be reasonably clear\n</p>\n<ul>\n<li>Load, and create an instance of the 'events' class\n<li>fetch the record with the primary ID = 3523\n<li>set the value of 'action' to 'testing'\n<li>perform a database update\n</ul>\n\n<p>\nMost methods in PDO_DataObjects support chaining, except on methods which are designed to be\n compatibile with DB_DataObjects.\n</p>\n\n\n"
 },
 "items" : [
  {
   "xtype" : "Body",
   "$ xns" : "Roo.bootstrap",
   "items" : [
    {
     "xtype" : "Header",
     "Number level" : 1,
     "$ xns" : "Roo.bootstrap",
     "String html" : "Configuration"
    },
    {
     "xtype" : "Element",
     "$ xns" : "Roo.bootstrap",
     "String html" : "<p>\nPDO_DataObject can be configured in many ways, the exact properties are listed\n in the <a href=\"#pdo-dataobject/config\">config</a> method\n</p>\n\n<p>\nDatabase DSNs are based around the classic PEAR DB, format (URL), and are mapped to PDO DSN for connecting.\nA DSN consists of\n<dl>\n\n<dt>database type://</dt>\n<dd>currently supported are mysql, pgsql, sqlite and to some degree oracle and mssql</dd>\n\n\n\n<dt>user:pass@</dt>\n<dd>before the host, you can put the user and password combination,<br/>\n for postgresql the user pass will be set as the arguments on the PDO constructor\n</dd>\n\n<dt>hostname/</dt>\n<dd>normally  localhost, or an IP or server. if you are using sqlite the format is slightly different, see below.\n</dd>\n\n<dt>databasename</dt>\n<dd>the database name.</dd>\n\n<dt>?some=params</dt>\n<dd>if the PDO connections needs other information it can go here.\n</dd>\n\n<dt>#ATTR_PERSISENT</dt>\n<dd>you can set PDO connection properties using the pipe character as a seperator after the hash, eg.\nXXXX=1|YYY=2\n</dd>\n\n</dl>"
    },
    {
     "xtype" : "Entry",
     "$ xns" : "Roo.doc",
     "items" : [
      {
       "String lang" : "php",
       "xtype" : "Section",
       "$ xns" : "Roo.doc",
       "items" : [
        {
         "String code" : "PDO_DataObject::factory('Events')\n    ->load(3523)\n    ->set(['action' => \"testing\" ])\n    ->save();\n",
         "xtype" : "Example",
         "$ xns" : "Roo.doc",
         "String title" : "Example of using PDO_DataObjects"
        }
       ]
      }
     ]
    },
    {
     "xtype" : "Element",
     "$ xns" : "Roo.bootstrap",
     "String html" : "<p>\nWhat that code does should be reasonably clear\n</p>\n<ul>\n<li>Load, and create an instance of the 'events' class\n<li>fetch the record with the primary ID = 3523\n<li>set the value of 'action' to 'testing'\n<li>perform a database update\n</ul>\n\n<p>\nMost methods in PDO_DataObjects support chaining, except on methods which are designed to be\n compatibile with DB_DataObjects.\n</p>\n\n\n"
    }
   ]
  }
 ]
}